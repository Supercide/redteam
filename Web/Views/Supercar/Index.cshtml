@using Web.Models
@model Supercar

@{
  ViewBag.Title = Model.Make.Name + " " + Model.Model;
}

<h2>@Model.Make.Name @Model.Model</h2>

<div class="hero-unit">
  <p>@Html.DisplayFor(model => model.Description)</p>
</div>

<div class="row-fluid">
  <div class="span4">
    <h4 id="votesHeading">@Model.Votes.Count 
      @if (Model.Votes.Count == 1)
      {
        <text>vote</text>
      }
      else
      {
        <text>votes</text>
      }
      out of @ViewBag.TotalVotes total</h4>
    <div class="progress progress-success">
      <div class="bar" id="voteBar" style="width: @((int)(Model.Votes.Count / ViewBag.TotalVotes * 100))%"></div>
    </div>
    @{ var enableVoting = false;}
    @if (!User.Identity.IsAuthenticated)
    {
      <p class="alert alert-info">
        @Html.ActionLink("Log in", "Login", "Account", new { returnUrl = Request.Path }, null) to vote for the @Model.Model
      </p>
    }
    else if (Model.Votes != null && Model.Votes.Select(v => v.User.Email).Contains(User.Identity.Name))
    {
      <p class="alert alert-success">You've already voted for the @Model.Model</p>
    }
    else
    {   
      <p id="voteContainer"><a href="#voteModal" role="button" class="btn btn-large btn-success" data-toggle="modal" id="voteButton">Vote for the @Model.Model</a></p>
      
      <div id="voteModal" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-header">
          <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
          <h3 id="myModalLabel">You've voting for the @Model.Model</h3>
        </div>
        <div class="modal-body">
          <p>Are you really sure you want to vote for the @Model.Model? You can't recall your vote if you change your mind!</p>

          <div class="control-group">
            <label class="control-label" for="comments">Comments</label>
            <div class="controls">
              <textarea rows="2" id="comments"></textarea>
            </div>
          </div>

          <div id="voteFailure" class="alert alert-error" style="display: none;">Uh oh, your vote couldn't be cast.</div>
          <div class="progress progress-striped active" id="progressBar" style="display: none;">
            <div class="bar" style="width: 100%;"></div>
          </div>
        </div>
        <div class="modal-footer">
          <button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>
          <button class="btn btn-primary" id="confirmVoteButton" data-user-id="@Membership.GetUser(User.Identity.Name).ProviderUserKey"
                  data-supercar-id="@Model.SupercarId" data-votes="@Model.Votes.Count" data-total-votes="@ViewBag.TotalVotes"
                  data-first-name="@ViewBag.FirstName" data-last-name="@ViewBag.LastName">Vote</button>
        </div>
      </div>
      enableVoting = true;
    }
    <div class="row-fluid">
      <div class="span6">
        <dl>
          <dt>@Html.DisplayNameFor(model => model.PowerKw) /  @Html.DisplayNameFor(model => model.TorqueNm)</dt>
          <dd>@Html.DisplayFor(model => model.PowerKw) / @Html.DisplayFor(model => model.TorqueNm)</dd>
        </dl>
        <dl>
          <dt>@Html.DisplayNameFor(model => model.WeightKg)</dt>
          <dd>@Html.DisplayFor(model => model.WeightKg)</dd>
        </dl>
        <dl class="control-group">
          <dt>@Html.DisplayNameFor(model => model.ZeroToOneHundredKmInSecs)</dt>
          <dd>@Html.DisplayFor(model => model.ZeroToOneHundredKmInSecs)</dd>
        </dl>
      </div>
      <div class="span6">
        <dl>
          <dt>@Html.DisplayNameFor(model => model.TopSpeedKm)</dt>
          <dd>@Html.DisplayFor(model => model.TopSpeedKm)</dd>
        </dl>
        <dl>
          <dt>@Html.DisplayNameFor(model => model.EngineLayout)</dt>
          <dd>@Html.DisplayFor(model => model.EngineLayout)</dd>
        </dl>
        <dl>
          <dt>@Html.DisplayNameFor(model => model.EngineCc)<dt>
                                                           <dd>@Html.DisplayFor(model => model.EngineCc)</dd>
        </dl>
      </div>
    </div>
    <div class="row-fluid">
      <h3>Comments</h3>
      @if (!Model.Votes.Where(v => !string.IsNullOrEmpty(v.Comments)).Any())
      {
        <p class="alert alert-info">There are currently no comments for the @Model.Model</p>
      }
      else
      {
        <table id="results" class="table table-striped">
          <thead>
            <tr>
              <th>Voter</th>
              <th>Comment</th>
            </tr>
          </thead>
          <tbody>
            @{ var rank = 1; }
            @foreach (var vote in Model.Votes.Where(v => !string.IsNullOrEmpty(v.Comments)))
            {
              <tr>
                <td>@Html.Raw(vote.User.FirstName) @Html.Raw(vote.User.LastName)</td>
                <td>@Html.Raw(vote.Comments)</td>
              </tr>
              rank++;
            }
          </tbody>
        </table>
      }
    </div>
  </div>

  <div id="myCarousel" class="span8 carousel slide">
    <div class="carousel-inner">
      @for (var i = 1; i <= 3; i++)
      {
        <div class="item" style="background-image: url('/Images/Cars/@(Model.SupercarId)/@(i).jpg');">
        </div>
      }
    </div>
    <a class="left carousel-control" href="#myCarousel" data-slide="prev">&lsaquo;</a>
    <a class="right carousel-control" href="#myCarousel" data-slide="next">&rsaquo;</a>
  </div>

</div>

@section Scripts {
  @Scripts.Render("~/bundles/bootstrap-carousel")
  @if (enableVoting)
  {
    @Scripts.Render("~/bundles/vote")
  }
  <script type="text/javascript">
    !function ($) {
      $(function () {
        $('.carousel-inner div:first-child').addClass('active');
        $('#myCarousel').carousel();
      })
    }(window.jQuery)
  </script>
}
